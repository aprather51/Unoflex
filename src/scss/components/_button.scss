/* Button Default */
@mixin btnSolid($bg, $color, $borderRadius, $border) {
    background: $bg;
    color: $color;
    font-weight: 500;
    display: inline-block;
    padding: .5em 1.2em;
    border: $border;
    border-radius: $borderRadius;
    line-height: 1;
    text-align: center;
    white-space: nowrap;
    vertical-align: middle;
    cursor: pointer;
    &:hover {
        background:darken($bg,8%);
        color: $color;
        transition: all 0.1s ease;
    }
    &:active {
        background:darken($bg,25%);
        color: $color;
    } 
}

@mixin btnOutline($bg, $color, $hoverColor, $borderRadius, $border) {
    background: transparent;
    color: $color;
    font-weight: 500;
    display: inline-block;
    padding: .5em 1.2em;
    border: $border;
    border-radius: $borderRadius;
    line-height: 1;
    text-align: center;
    white-space: nowrap;
    vertical-align: middle;
    &:hover {
      background: $bg;
      color: $hoverColor;
      transition: all 0.1s ease;
    }
    &:active {
      background: $bg;
      color: $hoverColor;
    } 
  }

/* Default Color*/
$bgColor: $liGray;
$color: $dkGray;
$hoverColor: $white;
$radius: 0;
$border: 2px solid $bgColor;

/*  Button  */
/*  
    Class name can be customized.
    To get Solid Button Use:
    @include btnSolid (Background-Color, Color, BorderRadius, Border)
    To get Outline Button Use:
    @include btnSolid (Background-Color, Color, BorderRadius, Border)
    Button Background-Color, Font Color, Border Radius and Border Type can be changed. 
*/
.btnSolid{
    @include btnSolid($bgColor, $color, $radius, $border);
}

.btnOutline{
    @include btnOutline($bgColor, $color, $hoverColor, $radius, $border);
}



